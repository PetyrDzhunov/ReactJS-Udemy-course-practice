{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","onFocus","e","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,iGCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EArDG,SAACL,GACjB,MAAkCM,oBAAS,GAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,qCACE,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,iBAAM,yEACzC,cAAC,EAAD,UACE,uBAAMC,QAZe,SAACC,GAC1BP,GAAc,IAWyBP,UAAWC,IAAQc,KAAMC,SAvBlE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe5C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAEtC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAEpC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAxBY,SAACtB,GAC7BP,GAAc,IAuBkCP,UAAU,MAAlD,kC,QCtBGqC,UAnBE,WAChB,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACM,cAAXH,GACHC,EAAQG,KAAK,aAEZ,CAACJ,EAAQC,IAMZ,OACC,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALrB,SAACuB,GACxBN,EAAYM","file":"static/js/6.e692720f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1gutB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3oQIl\",\"loading\":\"QuoteForm_loading__sUF8R\",\"control\":\"QuoteForm_control__3CwsX\",\"actions\":\"QuoteForm_actions__1htgI\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  let [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = (e) => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = (e) => {\n    setIsEntering(false);\n  };\n\n  return (\n    <>\n      <Prompt when={isEntering} message={() => 'Are you sure you want to leave? All your entered data will be lost!'} />\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport useHttp from '../hooks/use-http';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\n\r\nimport { addQuote } from '../lib/api';\r\n\r\n\r\n\r\nconst NewQuote = () => {\r\n\tconst { sendRequest, status } = useHttp(addQuote);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'completed') {\r\n\t\t\thistory.push('/quotes');\r\n\t\t};\r\n\t}, [status, history]);\r\n\r\n\tconst addQuoteHandler = (quoteData) => {\r\n\t\tsendRequest(quoteData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n\t);\r\n}\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}